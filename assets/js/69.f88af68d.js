(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{382:function(t,a,s){"use strict";s.r(a);var r=s(7),n=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),a("p",[t._v("除了传统的 OO 层次结构，从可重用组件构建类的另一种流行方法是通过组合更简单的部分类来构建类。您可能熟悉 "),a("strong",[t._v("Scala")]),t._v(" 等语言的 "),a("code",[t._v("mixins")]),t._v(" 或 "),a("code",[t._v("trait")]),t._v(" 的概念，并且该模式在 JavaScript 社区中也很流行。")])])}),[],!1,null,null,null);a.default=n.exports}}]);