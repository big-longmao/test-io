(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{418:function(s,t,n){"use strict";n.r(t);var a=n(7),e=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"唯一标识-unique-symbol"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#唯一标识-unique-symbol"}},[s._v("#")]),s._v(" 唯一标识（unique symbol）")]),s._v(" "),t("p",[s._v("要启用将 "),t("strong",[s._v("symbol")]),s._v(" 作为唯一字面量处理，可以使用特殊类型的 "),t("code",[s._v("unique symbol")]),s._v("。"),t("code",[s._v("unique symbol")]),s._v(" 是 "),t("code",[s._v("symbol")]),s._v(" 的子类型，只能通过调用 "),t("code",[s._v("symbol()")]),s._v(" 或 "),t("code",[s._v("symbol.for()")]),s._v(" 或显式类型注释生成。这种类型只允许在 "),t("code",[s._v("const")]),s._v(" 声明和 "),t("code",[s._v("readonly static")]),s._v(" 属性上使用，为了引用特定的 "),t("code",[s._v("unique symbol")]),s._v("，必须使用 "),t("code",[s._v("typeof")]),s._v(" 操作符。对 "),t("code",[s._v("unique symbol")]),s._v(" 的每个引用都意味着与给定声明相关联的完全惟一标识。")]),s._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("declare")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sym1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" unique "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// sym2 can only be a constant reference.(Sym2 只能是常量引用。)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym2"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" unique "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("symbol")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// A variable whose type is a 'unique symbol' type must be 'const'.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (类型为 'unique symbol' 类型的变量必须为 'const'。)")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Works - refers to a unique symbol, but its identity is tied to 'sym1'.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// (Works -指的是一个 unique symbol，但它的身份与 “sym1” 相关。)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" sym3"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" sym1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sym1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// Also works.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("C")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("readonly")]),s._v(" StaticSymbol"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" unique "),t("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("symbol")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("p",[s._v("因为每个 "),t("code",[s._v("unique symbol")]),s._v(" 都有一个完全独立的标识，所以没有两个 "),t("code",[s._v("unique symbol")]),s._v(" 类型是可分配的或相互比较的。")]),s._v(" "),t("div",{staticClass:"language-ts line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ts"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sym2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" sym3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("Symbol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n \n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sym2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" sym3"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// This condition will always return 'false' since the types 'typeof sym2' and 'typeof sym3' have no overlap.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ( 这个条件将总是返回 'false'，因为类型 'typeof sym2' 和 'typeof sym3' 没有重叠。 )")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);