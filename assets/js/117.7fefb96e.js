(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{429:function(t,s,e){"use strict";e.r(s);var a=e(7),r=Object(a.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"类的私有和受保护成员"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的私有和受保护成员"}},[this._v("#")]),this._v(" 类的私有和受保护成员")]),this._v(" "),t("h5",{attrs:{id:"类的私有和受保护成员-private-and-protected-members-in-classes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类的私有和受保护成员-private-and-protected-members-in-classes"}},[this._v("#")]),this._v(" 类的私有和受保护成员(Private and protected members in classes)")]),this._v(" "),t("p",[this._v("类中的私有成员和受保护成员会影响它们的兼容性。当检查类的实例是否兼容时，如果目标类型包含私有成员，则源类型也必须包含来自于同一类的私有成员。同样，这也适用于具有受保护成员的实例。 这允许子类赋值给父类，但是不能赋值给其它有同样类型的类。")])])}),[],!1,null,null,null);s.default=r.exports}}]);