(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{324:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"基本类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本类型"}},[t._v("#")]),t._v(" 基本类型")]),t._v(" "),s("h2",{attrs:{id:"类型声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型声明"}},[t._v("#")]),t._v(" "),s("strong",[t._v("类型声明")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("类型声明是 TS 非常重要的一个特点")])]),t._v(" "),s("li",[s("p",[t._v("通过类型声明可以指定TS中变量（参数、形参、函数返回值）的类型")])]),t._v(" "),s("li",[s("p",[t._v("指定类型之后，当为变量赋值时，TS编译器会自动检测值是否符合类型声明，符合则赋值，否则报错")])]),t._v(" "),s("li",[s("p",[t._v("简而言之，类型声明给变量设置了类型，使得变量只能够存储某种类型的值")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("语法：")])]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" 变量"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" 变量"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 类型 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 参数"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 类型"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 类型 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])])])]),t._v(" "),s("h2",{attrs:{id:"自动判断类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自动判断类型"}},[t._v("#")]),t._v(" "),s("strong",[t._v("自动判断类型")])]),t._v(" "),s("ul",[s("li",[t._v("TS 拥有自动的类型判断机制")]),t._v(" "),s("li",[t._v("当对变量的声明和赋值在同时进行时，TS 编译器会自动判断变量的类型")]),t._v(" "),s("li",[t._v("所以如果你的变量的声明和赋值是在同时发生的，可以省略掉类型声明")])]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里给 变量b 在声明类型和赋值同时进行了，所以 TS编译器 会自动根据赋的初始值检测变量的类型，，所以 变量b 是一个字符串类型的变量")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'123'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nb "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'邻家大龙猫'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// b = 10;  // 报错，，因为 变量b 只接受字符串类型值")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("也同样能够使用ES2015中的模板字符串")]),t._v(" "),s("div",{staticClass:"language-typescript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-typescript"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'邻家大龙猫'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("hello, ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("swqw\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" "),s("strong",[t._v("类型")])]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("类型")]),t._v(" "),s("th",[t._v("例子")]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("number")]),t._v(" "),s("td",[t._v("1，-33，2.5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("变量只接受数字类型的值（任意数字）")])]),t._v(" "),s("tr",[s("td",[t._v("string")]),t._v(" "),s("td",[t._v("'11' ，'aa'，'哈哈哈'")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("变量只接受字符串类型的值（任意字符串）")])]),t._v(" "),s("tr",[s("td",[t._v("boolean")]),t._v(" "),s("td",[t._v("false、true")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("变量只接受布尔类型的值")])]),t._v(" "),s("tr",[s("td",[t._v("字面量")]),t._v(" "),s("td",[t._v("其本身")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("限制变量的值就是该字面量的值")])]),t._v(" "),s("tr",[s("td",[t._v("any")]),t._v(" "),s("td",[t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("变量能够接受任意类型的值")])]),t._v(" "),s("tr",[s("td",[t._v("unknown")]),t._v(" "),s("td",[t._v("*")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("类型安全的any")])]),t._v(" "),s("tr",[s("td",[t._v("void")]),t._v(" "),s("td",[t._v("空值（undefined）")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("没有值（或 undefined）")])]),t._v(" "),s("tr",[s("td",[t._v("never")]),t._v(" "),s("td",[t._v("没有值")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("不能是任何值")])]),t._v(" "),s("tr",[s("td",[t._v("object")]),t._v(" "),s("td",[t._v('{name: "邻家大龙猫"}')]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("任意的JS对象")])]),t._v(" "),s("tr",[s("td",[t._v("array")]),t._v(" "),s("td",[t._v("[1, 3, 4]")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("任意的JS数组")])]),t._v(" "),s("tr",[s("td",[t._v("tuple")]),t._v(" "),s("td",[t._v("[4, 5]")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("元素，TS 新增类型，固定长度的数组")])]),t._v(" "),s("tr",[s("td",[t._v("enum")]),t._v(" "),s("td",[t._v("enum{A, B}")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("枚举，TS 中新增类型")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);